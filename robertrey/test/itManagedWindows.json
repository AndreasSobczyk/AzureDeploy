{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "instancecount": {
            "type": "int",
            "defaultValue": "2",
            "maxValue": 10,
            "metadata": {
                "description": "Specify the number of VMs to create"
            }
        },
        "vmNameSuffix": {
            "type": "string",
            "defaultValue": "VM",
            "metadata": {
                "description": "Assing a suffix for the VMs you will create"
            }
        },
        "platform": {
            "type": "string",
            "defaultValue": "Windows",
            "allowedValues": [
                "Windows"
            ],
            "metadata": {
                "description": "Select the OS type to deploy"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D1",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_D1",
                "Standard_D2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2"
            ]
        },
        "vNetName": {
            "type": "string",
            "defaultValue": "TestNet",
            "allowedValues": [
                "TestNet",
                "CorpNet"
            ],
            "metadata": {
                "description": "Select the virtual network to connect the VMs"
            }
        },
        "vNetResourceGroupName": {
            "type": "string",
            "defaultValue": "MicrosoftOMS",
            "allowedValues": [
                "MicrosoftOMS"
            ],
            "metadata": {
                "description": "Specify Resource Group for the corresponding vNet you selected"
            }
        },
        "vnetSubnetName": {
            "type": "string",
            "defaultValue": "default",
            "metadata": {
                "description": "Specify the subnet for the corresponding vNet and vNetResourceGroup you selected"
            }
        },
        "username": {
            "type": "string",
            "defaultValue": "azureadmin"
        },
        "pwd": {
            "type": "securestring"
        },
        "omsWorkspaceResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Name of your OMS workspace Resource Group"
            }
        },
        "omsWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name of your OMS workspace"
            }
        },
        "automationUri": {
            "type": "string",
            "metadata": {
                "description": "Specify the automation endpoint"
            }
        },
        "automationPrimaryKey": {
            "type": "string",
            "metadata": {
                "description": "Specify the Primary Key for your automation account"
            }
        }
    },
    "variables": {
        "storageAccountName": "[toLower(concat('st', uniquestring(resourceGroup().name)))]",
        "vnetID": "[resourceId(parameters('vnetResourceGroupName'), 'Microsoft.Network/virtualnetworks', parameters('vNetName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('vNetSubnetName'))]",
        "managementType": "[variables(concat('managementType',parameters('platform')))]",
        "managementTypeWindows": {
            "type": "MicrosoftMonitoringAgent",
            "dscType": "DSC",
            "publisher": "Microsoft.PowerShell",
            "version": "2.19"
        },        
        "osType": "[variables(concat('osType',parameters('platform')))]",        
        "osTypeWindows": {
            "imageOffer": "WindowsServer",
            "imageSku": "Windows-Server-Technical-Preview",
            "imagepublisher": "MicrosoftWindowsServer"
        }            
    },
    "resources": [
        {
            "apiversion": "2015-05-01-preview",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "accounttype": "Standard_LRS"
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(parameters('vmNameSuffix'), 'IP', copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "[concat(parameters('vmNameSuffix'), 'IP')]",
                "count": "[parameters('instancecount')]"
            },
            "properties": {
                "publicIPallocationmethod": "Dynamic"
            }
        },    
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmNameSuffix'), 'nic', copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "[concat(parameters('vmNameSuffix'), 'nic')]",
                "count": "[parameters('instancecount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('vmNameSuffix'), 'IP', copyIndex())]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmNameSuffix'), 'IP', copyIndex()))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNameSuffix'), 'VM', copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "[concat(parameters('vmNameSuffix'), 'VM')]",
                "count": "[parameters('instancecount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/StorageAccounts/', variables('storageaccountname'))]",
                "[concat('Microsoft.Network/networkinterfaces/', parameters('vmNameSuffix'), 'nic', copyIndex())]"
            ],
            "properties": {
                "hardwareprofile": {
                    "vmsize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(parameters('vmNameSuffix'), 'VM', copyIndex())]",
                    "adminusername": "[parameters('username')]",
                    "adminpassword": "[parameters('pwd')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('osType').imagePublisher]",
                        "offer": "[variables('osType').imageOffer]",
                        "version": "latest",
                        "sku": "[variables('osType').imageSku]"
                    },
                    "osdisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/', 'vhds', '/', 'osdisk', copyIndex(), '.vhd')]"
                        },
                        "caching": "readwrite",
                        "createoption": "FromImage"
                    }
                },
                "networkprofile": {
                    "networkinterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkinterfaces', concat(parameters('vmNameSuffix'),'nic', copyIndex()))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmNameSuffix'), 'VM', copyIndex(), '/OMS')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "[concat(parameters('vmNameSuffix'), 'VM', 'OMS')]",
                "count": "[parameters('instancecount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmNameSuffix'), 'VM', copyIndex())]"
            ],
            "properties": {
                "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                "type": "[variables('managementType').type]",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "workspaceId": "[reference(resourceId(parameters('omsWorkspaceResourceGroup'), 'Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName')), '2015-11-01-preview').customerId]"
                },
                "protectedSettings": {
                    "workspaceKey": "[listKeys(resourceId(parameters('omsWorkspaceResourceGroup'),'Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName')), '2015-11-01-preview').primarySharedKey]"
                }
            }            
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmNameSuffix'),'VM', copyIndex(), '/Microsoft.Powershell.DSC')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmNameSuffix'), 'VM', copyIndex(), '/extensions/OMS')]"
            ],
            "copy": {
                "name": "[concat(parameters('vmNameSuffix'), 'VM', 'DSC')]",
                "count": "[parameters('instancecount')]"
            },
            "properties": {
                "publisher": "[variables('managementType').publisher]",
                "type": "[variables('managementType').dscType]",
                "typeHandlerVersion": "[variables('managementType').version]",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "Items": {
                        "registrationKeyPrivate": "[parameters('automationPrimaryKey')]"
                    }
                },
                "settings": {
                    "ModulesUrl": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-azure-automation-pullserver/UpdateLCMforAAPull.zip",
                    "SasToken": "",
                    "ConfigurationFunction": "UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
                    "Properties": [
                        {
                            "Name": "RegistrationKey",
                            "Value": {
                                "UserName": "PLACEHOLDER_DONOTUSE",
                                "Password": "PrivateSettingsRef:registrationKeyPrivate"
                            },
                            "TypeName": "System.Management.Automation.PSCredential"
                        },
                        {
                            "Name": "RegistrationUrl",
                            "Value": "[parameters('automationUri')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "NodeConfigurationName",
                            "Value": "OMSSERVICE.localhost",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "ConfigurationMode",
                            "Value": "ApplyAndMonitor",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "ConfigurationModeFrequencyMins",
                            "Value": 15,
                            "TypeName": "System.Int32"
                        },
                        {
                            "Name": "RefreshFrequencyMins",
                            "Value": 30,
                            "TypeName": "System.Int32"
                        },
                        {
                            "Name": "RebootNodeIfNeeded",
                            "Value": true,
                            "TypeName": "System.Boolean"
                        },
                        {
                            "Name": "ActionAfterReboot",
                            "Value": "ContinueConfiguration",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "AllowModuleOverwrite",
                            "Value": true,
                            "TypeName": "System.Boolean"
                        }
                    ]
                }
            }
        }        
    ],
    "outputs": {}
}