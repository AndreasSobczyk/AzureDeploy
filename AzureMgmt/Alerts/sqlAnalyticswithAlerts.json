{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "allowedValues": [
                "East US",
                "West Europe",
                "Southeast Asia",
                "Australia Southeast"
            ]
        },
        "workspace": {
            "type": "string",
            "defaultValue": ""
        },
        "workspaceapiversion": {
            "type": "string",
            "defaultValue": "2015-11-01-preview"
        }
    },
    "variables": {
//creating a complex variable for each search and alert. If you want to add an alert you need to add the resources in the resource section too        
        "sqlAzureSolution": {
            "name": "SQL Azure Analytics",
            "id": "[concat('SQL Azure Analytics', '[', parameters('workspace'), ']')]",
            "version": "1.0",
            "publisher": "Microsoft",
            "description": "Management solution for SQL Azure",
            "author": "Satya Vel"
        },
        "alert1": {
            "searchName": "Azure SQL Database DTU",
            "description": "A Database Transaction Unit (DTU) is a blended measure of CPU, memory, data I/O and transaction log I/O in a ratio determined by an OLTP benchmark workload designed to be typical of real-world OLTP workloads. This alert is indicator that one of your databases maybe underperforming and unhealthy.",
            "severity": "Critical",
            "query": "Type=AzureMetrics ResourceId=*\"DATABASES\"* MetricName-dtu_consumption_percent | measure avg(Average) by Resource interval 1minute",
            "alertTresholdValue": 90,
            "operator": "gt",
            "alertThrottleInMinutes": 60,
            "alertBreach": 1,
            "searchCategory": "Azure SQL",
            "scheduleIntervalInMinutes": 5,
            "scheduleQueryTimeSpan": 5,
            "alertName": "Azure SQL Database DTU Consumption is greater than 90%"
        },
        "alertConstruct1": {
            "searchId": "[concat(toLower(variables('alert1').searchCategory), '|', toLower(variables('alert1').searchName))]",
            "scheduleId": "[toLower(concat('schedule-', uniqueString(resourceGroup().id, deployment().name)))]",
            "alertId": "[toLower(concat('alert1-', uniqueString(resourceGroup().id, deployment().name)))]"
        },
        "alert2": {
            "searchName": "Azure SQL Elastic Pool",
            "description": "A Database Transaction Unit (DTU) is a blended measure of CPU, memory, data I/O and transaction log I/O in a ratio determined by an OLTP benchmark workload designed to be typical of real-world OLTP workloads. This alert is indicator that one of your Elastic Pools maybe underperforming and unhealthy.",
            "severity": "Critical",
            "query": "Type=AzureMetrics ResourceId=*\"ELASTICPOOLS\"* MetricName=dtu_consumption_percent | measure avg(Average) by Resource interval 1minute",
            "alertTresholdValue": 90,
            "operator": "gt",
            "alertThrottleInMinutes": 60,
            "alertBreach": 1,
            "searchCategory": "Azure SQL",
            "scheduleIntervalInMinutes": 5,
            "scheduleQueryTimeSpan": 5,
            "alertName": "Azure SQL Elastic Pool DTU Consumption is greater than 90%"
        },
        "alertConstruct2": {
            "searchId": "[concat(toLower(variables('alert2').searchCategory), '|', toLower(variables('alert2').searchName))]",
            "scheduleId": "[toLower(concat('schedule2-', uniqueString(resourceGroup().id, deployment().name)))]",
            "alertId": "[toLower(concat('alert2-', uniqueString(resourceGroup().id, deployment().name)))]"
        },
        "alert3": {
            "searchName": "Azure SQL Elastic Pool Storage",
            "description": "Azure SQL Elastic Pool storage consumption is greater than 90%",
            "severity": "Critical",
            "query": "Type=AzureMetrics ResourceId=*\"ELASTICPOOLS\"* MetricName=storage_percent | measure avg(Average) by Resource interval 1minute",
            "alertTresholdValue": 90,
            "operator": "gt",
            "alertThrottleInMinutes": 60,
            "alertBreach": 1,
            "searchCategory": "Azure SQL",
            "scheduleIntervalInMinutes": 5,
            "scheduleQueryTimeSpan": 5,
            "alertName": "Azure SQL Elastic Pool storage consumption is greater than 90%"
        },
        "alertConstruct3": {
            "searchId": "[concat(toLower(variables('alert3').searchCategory), '|', toLower(variables('alert3').searchName))]",
            "scheduleId": "[toLower(concat('schedule3-', uniqueString(resourceGroup().id, deployment().name)))]",
            "alertId": "[toLower(concat('alert3-', uniqueString(resourceGroup().id, deployment().name)))]"
        },
        "alert4": {
            "searchName": "Azure SQL Database Size Percentage",
            "description": "Azure SQL Database Size Percentage is greater than 90%",
            "severity": "Critical",
            "query": "Type=AzureMetrics ResourceId=*\"DATABASES\"* MetricName=storage_percent | measure avg(Average) by Resource interval 1minute",
            "alertTresholdValue": 90,
            "operator": "gt",
            "alertThrottleInMinutes": 60,
            "alertBreach": 1,
            "searchCategory": "Azure SQL",
            "scheduleIntervalInMinutes": 5,
            "scheduleQueryTimeSpan": 5,
            "alertName": "Azure SQL Database Size Percentage is greater than 90%"
        },
        "alertConstruct4": {
            "searchId": "[concat(toLower(variables('alert4').searchCategory), '|', toLower(variables('alert4').searchName))]",
            "scheduleId": "[toLower(concat('schedule4-', uniqueString(resourceGroup().id, deployment().name)))]",
            "alertId": "[toLower(concat('alert4-', uniqueString(resourceGroup().id, deployment().name)))]"
        }
    },
    "resources": [
        {
            "apiVersion": "[parameters('workspaceapiversion')]",
            "name": "[parameters('workspace')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "location": "[parameters('location')]",
            "resources": [
                //add your views resource to this section. You can export this from the custom view designer
            ]
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspace'), '/', variables('alertConstruct1').searchId)]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]"
            ],
            "properties": {
                "etag": "*",
                "query": "[variables('alert1').query]",
                "displayName": "[variables('alert1').searchName]",
                "category": "[variables('alert1').searchCategory]"
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches/schedules",
            "name": "[concat(parameters('workspace'), '/', variables('alertConstruct1').searchId, '/', variables('alertConstruct1').scheduleId)]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'), '/savedSearches/', variables('alertConstruct1').searchId)]"
            ],
            "properties": {
                "etag": "*",
                "Interval": "[variables('alert1').scheduleIntervalInMinutes]",
                "QueryTimeSpan": "[variables('alert1').scheduleQueryTimeSpan]",
                "enabled": true
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches/schedules/actions",
            "name": "[concat(parameters('workspace'), '/', variables('alertConstruct1').searchId, '/', variables('alertConstruct1').scheduleId, '/', variables('alertConstruct1').alertId)]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'), '/savedSearches/', variables('alertConstruct1').searchId)]",
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'), '/savedSearches/', variables('alertConstruct1').searchId, '/schedules/', variables('alertConstruct1').scheduleId)]"
            ],
            "properties": {
                "etag": "*",
                "Type": "Alert",
                "Name": "[variables('alert1').alertName]",
                "Description": "[variables('alert1').description]",
                "Severity": "[variables('alert1').severity]",
                "Throttling": {
                    "DurationInMinutes": "[variables('alert1').alertThrottleInMinutes]"
                },
                "Threshold": {
                    "Operator": "[variables('alert1').operator]",
                    "Value": "[variables('alert1').alertTresholdValue]",
                    "MetricsTrigger": {
                        "TriggerCondition": "Total",
                        "Operator": "[variables('alert1').operator]",
                        "Value": "[variables('alert1').alertBreach]"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspace'), '/', variables('alertConstruct2').searchId)]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]"
            ],
            "properties": {
                "etag": "*",
                "query": "[variables('alert2').query]",
                "displayName": "[variables('alert2').searchName]",
                "category": "[variables('alert2').searchCategory]"
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches/schedules",
            "name": "[concat(parameters('workspace'), '/', variables('alertConstruct2').searchId, '/', variables('alertConstruct2').scheduleId)]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'), '/savedSearches/', variables('alertConstruct2').searchId)]"
            ],
            "properties": {
                "etag": "*",
                "Interval": "[variables('alert2').scheduleIntervalInMinutes]",
                "QueryTimeSpan": "[variables('alert2').scheduleQueryTimeSpan]",
                "enabled": true
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches/schedules/actions",
            "name": "[concat(parameters('workspace'), '/', variables('alertConstruct2').searchId, '/', variables('alertConstruct2').scheduleId, '/', variables('alertConstruct2').alertId)]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'), '/savedSearches/', variables('alertConstruct2').searchId)]",
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'), '/savedSearches/', variables('alertConstruct2').searchId, '/schedules/', variables('alertConstruct2').scheduleId)]"
            ],
            "properties": {
                "etag": "*",
                "Type": "Alert",
                "Name": "[variables('alert2').alertName]",
                "Description": "[variables('alert2').description]",
                "Severity": "[variables('alert2').severity]",
                "Throttling": {
                    "DurationInMinutes": "[variables('alert2').alertThrottleInMinutes]"
                },
                "Threshold": {
                    "Operator": "[variables('alert2').operator]",
                    "Value": "[variables('alert2').alertTresholdValue]",
                    "MetricsTrigger": {
                        "TriggerCondition": "Total",
                        "Operator": "[variables('alert2').operator]",
                        "Value": "[variables('alert2').alertBreach]"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspace'), '/', variables('alertConstruct3').searchId)]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]"
            ],
            "properties": {
                "etag": "*",
                "query": "[variables('alert3').query]",
                "displayName": "[variables('alert3').searchName]",
                "category": "[variables('alert3').searchCategory]"
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches/schedules",
            "name": "[concat(parameters('workspace'), '/', variables('alertConstruct3').searchId, '/', variables('alertConstruct3').scheduleId)]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'), '/savedSearches/', variables('alertConstruct3').searchId)]"
            ],
            "properties": {
                "etag": "*",
                "Interval": "[variables('alert3').scheduleIntervalInMinutes]",
                "QueryTimeSpan": "[variables('alert3').scheduleQueryTimeSpan]",
                "enabled": true
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches/schedules/actions",
            "name": "[concat(parameters('workspace'), '/', variables('alertConstruct3').searchId, '/', variables('alertConstruct3').scheduleId, '/', variables('alertConstruct3').alertId)]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'), '/savedSearches/', variables('alertConstruct3').searchId)]",
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'), '/savedSearches/', variables('alertConstruct3').searchId, '/schedules/', variables('alertConstruct3').scheduleId)]"
            ],
            "properties": {
                "etag": "*",
                "Type": "Alert",
                "Name": "[variables('alert3').alertName]",
                "Description": "[variables('alert3').description]",
                "Severity": "[variables('alert3').severity]",
                "Throttling": {
                    "DurationInMinutes": "[variables('alert3').alertThrottleInMinutes]"
                },
                "Threshold": {
                    "Operator": "[variables('alert3').operator]",
                    "Value": "[variables('alert1').alertTresholdValue]",
                    "MetricsTrigger": {
                        "TriggerCondition": "Total",
                        "Operator": "[variables('alert3').operator]",
                        "Value": "[variables('alert3').alertBreach]"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspace'), '/', variables('alertConstruct4').searchId)]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]"
            ],
            "properties": {
                "etag": "*",
                "query": "[variables('alert4').query]",
                "displayName": "[variables('alert4').searchName]",
                "category": "[variables('alert4').searchCategory]"
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches/schedules",
            "name": "[concat(parameters('workspace'), '/', variables('alertConstruct4').searchId, '/', variables('alertConstruct4').scheduleId)]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'), '/savedSearches/', variables('alertConstruct4').searchId)]"
            ],
            "properties": {
                "etag": "*",
                "Interval": "[variables('alert4').scheduleIntervalInMinutes]",
                "QueryTimeSpan": "[variables('alert4').scheduleQueryTimeSpan]",
                "enabled": true
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches/schedules/actions",
            "name": "[concat(parameters('workspace'), '/', variables('alertConstruct4').searchId, '/', variables('alertConstruct4').scheduleId, '/', variables('alertConstruct4').alertId)]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'), '/savedSearches/', variables('alertConstruct4').searchId)]",
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'), '/savedSearches/', variables('alertConstruct4').searchId, '/schedules/', variables('alertConstruct4').scheduleId)]"
            ],
            "properties": {
                "etag": "*",
                "Type": "Alert",
                "Name": "[variables('alert4').alertName]",
                "Description": "[variables('alert4').description]",
                "Severity": "[variables('alert4').severity]",
                "Throttling": {
                    "DurationInMinutes": "[variables('alert4').alertThrottleInMinutes]"
                },
                "Threshold": {
                    "Operator": "[variables('alert4').operator]",
                    "Value": "[variables('alert4').alertTresholdValue]",
                    "MetricsTrigger": {
                        "TriggerCondition": "Total",
                        "Operator": "[variables('alert4').operator]",
                        "Value": "[variables('alert4').alertBreach]"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationsManagement/solutions",
            "name": "[variables('sqlAzureSolution').id]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]"
            ],
            "plan": {
                "name": "[variables('sqlAzureSolution').id]",
                "product": "[variables('sqlAzureSolution').name]",
                "publisher": "[variables('sqlAzureSolution').publisher]",
                "promotionCode": ""
            },
            "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
                "referencedResources": [],
                "containedResources": [
                    // The view resource you add should be declared as a contained resource -> "[resourceId('Microsoft.OperationalInsights/workspaces/views/', parameters('workspace'), 'Azure SQL Analytics')]"
                ]
            }
        }
    ],
    "outputs": {}
}