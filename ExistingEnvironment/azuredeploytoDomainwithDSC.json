{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmname": {
      "type": "string",
      "defaultValue": "winvm01",
      "metadata": {
        "Description": "Type in the name of the virtual machine"
      }
    },
    "storageaccountname": {
      "type": "string",
      "defaultValue": "newstor",
      "metadata": {
        "Description": "Assing a storage account name. This will generate a unique storage account name"
      }
    },
    "storagetype": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS"
      ],
      "metadata": {
        "Description": "Specify the storage type for your storage account"
      }
    },
    "vNetResourceGroup": {
      "type": "string",
      "metadata": {
        "Description": "Type name of existing Resource Group containing the vNet"
      }
    },
    "vnetname": {
      "type": "string",
      "metadata": {
        "Description": "Type the name of the existing vnet within the resource group"
      }
    },
    "subnetname": {
      "type": "string",
      "metadata": {
        "Description": "Type the name of the existing subnet within the vnet"
      }
    },
    "adminuser": {
      "type": "string",
      "defaultValue": "azureadmin",
      "metadata": {
        "Description": "name of the admin user account"
      }
    },
    "password": {
      "type": "securestring",
      "metadata": {
        "Description": "assing a secure password for the admin user"
      }
    },
    "domainUserAccount": {
      "type": "string",
      "defaultValue": "knadmin@azurecloud.local",
      "metadata": {
        "Description": "account with permission to domain join computer objects in AD"
      }
    },
    "domainPassword": {
      "type": "securestring",
      "metadata": {
        "Description": "Specify password for the DomainUserAccount"
      }
    },
    "availabilitySet": {
      "type": "string",
      "defaultValue": "VMAVSet01",
      "metadata": {
        "Description": "Assign a name for the availability set"
      }
    },
    "nicname": {
      "type": "string",
      "defaultValue": "nic1",
      "metadata": {
        "Description": "Assign a name for the virtual network interface"
      }
    },
    "pipname": {
      "type": "string",
      "defaultValue": "pip1",
      "metadata": {
        "Description": "Assign a name for the public network interface"
      }
    },
    "imagesku": {
      "type": "string",
      "defaultValue": "Windows-Server-Technical-Preview",
      "allowedValues": [
        "Windows-Server-Technical-Preview",
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "Description": "Select the SKU"
      }
    },
    "vmsize": {
      "type": "string",
      "defaultValue": "Standard_D3",
      "allowedValues": [
        "Standard_A2",
        "Standard_A3",
        "Standard_A5",
        "Standard_D3"
      ],
      "metadata": {
        "Description": "Specify VM Size"
      }
    },
    "datadiskname": {
      "type": "string",
      "defaultValue": "data1",
      "metadata": {
        "Description": "Assign name of default data disk"
      }
    },
    "dscUrl": {
      "type": "string",
      "defaultValue": "https://github.com/krnese/AzureDeploy/raw/master/TESTENV/spvweb.zip",
      "metadata": {
        "Description": "Specify the URL to the DSC configuration"
      }
    },
    "configurationfunction": {
      "type": "string",
      "defaultValue": "spvweb.ps1\\webtest"
    },
    "domain": {
      "type": "string",
      "defaultValue": "azurecloud.local",
      "metadata": {
        "Description": "Specify the FQDN for the domain to join"
      }
    },
    "OUPath": {
      "type": "string",
      "defaultValue": "'CN=Computers; DC=azurecloud; DC=local",
      "metadata": {
        "Description": "Specify the OU where you want to place this computer object"
      }
    },
    "DomainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "Description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    }
  },
  "variables": {
    "storagename": "[toLower(concat(parameters('storageaccountname'), uniqueString(resourceGroup().id)))]",
    "vmsize": "[Parameters('vmsize')]",
    "vnetID": "[resourceId(parameters('vNetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetname'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('subnetname'))]",
    "apiVersion": {
      "Compute": {
        "VirtualMachines": "2015-06-15",
        "Extensions": "2015-06-15"
      },
      "Storage": {
        "storageAccounts": "2015-06-15"
      },
      "network": {
        "virtualnetworks": "2015-06-15",
        "publicIPaddress": "2015-06-15",
        "networkinterface": "2015-06-15"
      }
    },
    "osType": {
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('imagesku')]"
    },
    "ipallocation": "Dynamic",
    "extensionname": "CustomScriptExtension"
  },
  "resources": [
    {
      "apiVersion": "[variables('ApiVersion').storage.storageaccounts]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "name": "[variables('storagename')]",
      "properties": {
        "accountType": "[parameters('storagetype')]"
      }
    },
    {
      "apiVersion": "[variables('ApiVersion').Compute.virtualmachines]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "name": "[Parameters('availabilitySet')]",
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "5"
      }
    },
    {
      "apiVersion": "[variables('apiVersion').network.networkinterface]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[Parameters('nicname')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('pipname'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('pipname'))]"
              },
              "subnet": {
                "id": "[variables('subnetref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiversion').network.publicipaddress]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[Parameters('pipname')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('vmname'))]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiversion').compute.virtualmachines]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmname')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicname'))]",
        "[concat('Microsoft.Storage/StorageAccounts/', variables('storagename'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySet'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "adminPassword": "[parameters('password')]",
          "adminUsername": "[parameters('adminuser')]",
          "computerName": "[parameters('vmname')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "provisionVMAgent": true
          }
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/AvailabilitySets', parameters('availabilitySet'))]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "name": "[parameters('vmname')]",
            "caching": "readWrite",
            "vhd": {
              "uri": "[concat('http://', variables('storagename'), '.blob.core.windows.net/', 'vhds', '/', 'myvm.vhd')]"
            }
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://', variables('storagename'), '.blob.core.windows.net/vhds', '/', parameters('DataDiskName'),'-F.vhd')]"
              },
              "name": "[concat(parameters('DataDiskName'),'-F')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "1023",
              "lun": 0
            }
          ],
          "imageReference": {
            "offer": "[variables('osType').offer]",
            "publisher": "[variables('osType').publisher]",
            "sku": "[variables('osType').sku]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces/', parameters('nicname'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[variables('apiversion').Compute.Extensions]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/joindomain')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.0",
        "settings": {
          "Name": "[parameters('domain')]",
          "OUPath": "[parameters('ouPath')]",
          "User": "[concat(parameters('domain'), '\\', parameters('domainUserAccount'))]",
          "Restart": "true",
          "Options": "[parameters('domainJoinOptions')]"
        },
        "protectedsettings": {
          "Password": "[parameters('DomainPassword')]"
        }
      }
    },
    {
      "apiversion": "[variables('apiversion').Compute.Extensions]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmname'), '/', 'DSC')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmname'))]",
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmname'), '/extensions/joindomain')]"
      ],
      "properties": {
        "publisher": "Microsoft.PowerShell",
        "type": "DSC",
        "typeHandlerVersion": "2.14",
        "autoUpgradeMinorVersion": "true",
        "settings": {
          "ModulesUrl": "[parameters('dscurl')]",
          "configurationfunction": "[parameters('configurationfunction')]",
          "sastoken": "",
          "properties": {
            "servername": "[parameters('vmname')]"
          }
        }
      }
    }
  ]
}
